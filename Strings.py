
# ░██████╗████████╗██████╗░██╗███╗░░██╗░██████╗░░██████╗
# ██╔════╝╚══██╔══╝██╔══██╗██║████╗░██║██╔════╝░██╔════╝
# ╚█████╗░░░░██║░░░██████╔╝██║██╔██╗██║██║░░██╗░╚█████╗░
# ░╚═══██╗░░░██║░░░██╔══██╗██║██║╚████║██║░░╚██╗░╚═══██╗
# ██████╔╝░░░██║░░░██║░░██║██║██║░╚███║╚██████╔╝██████╔╝
# ╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░╚═════╝░
# Strings - Immutable cannot be modifyable
# Once a string object has been created, it cannot be changed. “Modifying” that string creates a whole new object in memory.
# We can prove it by using the id() function.
proverb = 'Rise each day before the sun'
print( id(proverb) )
#=> 4441962336
proverb_two = 'Rise each day before the sun' + ' if its a weekday'
print( id(proverb_two) )
#=> 4442287440


s = '0123456789' # String  
str(5) #=> '5' integer to string

# ASCII codes
''' A - 65
    Z - 90
    a - 97
    z - 122'''

chr(65) # returns 'A' ascii to character
ord('A') # returns 65 character to ascii

# Slicing s1 = s[ start : end : step]
s1 = s[:] # full string
s1 = s[::-1] # string reverse
string = 'I like to eat apples'
string[:6] #=> 'I like'
string[7:13] #=> 'to eat'
string[0:-1:2] #=> 'Ilk oetape' (every 2nd character)

s2 = s1+s  #concatenated string
s2 = s * 5  #5 times repeated string

#----------------------------------------------------------------
#----------------------------------------------------------------


# ██╗░░░██╗██████╗░██████╗░███████╗██████╗░  ░█████╗░███╗░░██╗██████╗░  ██╗░░░░░░█████╗░░██╗░░░░░░░██╗███████╗██████╗░
# ██║░░░██║██╔══██╗██╔══██╗██╔════╝██╔══██╗  ██╔══██╗████╗░██║██╔══██╗  ██║░░░░░██╔══██╗░██║░░██╗░░██║██╔════╝██╔══██╗
# ██║░░░██║██████╔╝██████╔╝█████╗░░██████╔╝  ███████║██╔██╗██║██║░░██║  ██║░░░░░██║░░██║░╚██╗████╗██╔╝█████╗░░██████╔╝
# ██║░░░██║██╔═══╝░██╔═══╝░██╔══╝░░██╔══██╗  ██╔══██║██║╚████║██║░░██║  ██║░░░░░██║░░██║░░████╔═████║░██╔══╝░░██╔══██╗
# ╚██████╔╝██║░░░░░██║░░░░░███████╗██║░░██║  ██║░░██║██║░╚███║██████╔╝  ███████╗╚█████╔╝░░╚██╔╝░╚██╔╝░███████╗██║░░██║
# ░╚═════╝░╚═╝░░░░░╚═╝░░░░░╚══════╝╚═╝░░╚═╝  ╚═╝░░╚═╝╚═╝░░╚══╝╚═════╝░  ╚══════╝░╚════╝░░░░╚═╝░░░╚═╝░░╚══════╝╚═╝░░╚═╝

# ░█████╗░░█████╗░░██████╗███████╗
# ██╔══██╗██╔══██╗██╔════╝██╔════╝
# ██║░░╚═╝███████║╚█████╗░█████╗░░
# ██║░░██╗██╔══██║░╚═══██╗██╔══╝░░
# ╚█████╔╝██║░░██║██████╔╝███████╗
# ░╚════╝░╚═╝░░╚═╝╚═════╝░╚══════╝
s.upper() #upper case string
s.lower() #lower case string
s.title() #converts first character of each word to uppercase
s.capitalize() # First character capitalized
s.casefold() #converts into lowercase
s.count('1') # counts the element passed as argument

#----------------------------------------------------------------
#----------------------------------------------------------------


# ██████╗░███████╗██████╗░██╗░░░░░░█████╗░░█████╗░███████╗
# ██╔══██╗██╔════╝██╔══██╗██║░░░░░██╔══██╗██╔══██╗██╔════╝
# ██████╔╝█████╗░░██████╔╝██║░░░░░███████║██║░░╚═╝█████╗░░
# ██╔══██╗██╔══╝░░██╔═══╝░██║░░░░░██╔══██║██║░░██╗██╔══╝░░
# ██║░░██║███████╗██║░░░░░███████╗██║░░██║╚█████╔╝███████╗
# ╚═╝░░╚═╝╚══════╝╚═╝░░░░░╚══════╝╚═╝░░╚═╝░╚════╝░╚══════╝
s.replace(s,s1) #replace s-old with s1-new
sentence = 'Sally sells sea shells by the sea shore'
sentence.replace('sea', 'mountain')
#=> 'Sally sells mountain shells by the mountain shore'

# maketrans() creates a mapping from characters to other characters. translate() then applies that mapping to translate a string.
# create mapping
mapping = str.maketrans("abcs", "123S")
# translate string
"abc are the first three letters".translate(mapping)
#=> '123 1re the firSt three letterS'

#----------------------------------------------------------------
#----------------------------------------------------------------

# ░██████╗███████╗░█████╗░██████╗░░█████╗░██╗░░██╗██╗███╗░░██╗░██████╗░
# ██╔════╝██╔════╝██╔══██╗██╔══██╗██╔══██╗██║░░██║██║████╗░██║██╔════╝░
# ╚█████╗░█████╗░░███████║██████╔╝██║░░╚═╝███████║██║██╔██╗██║██║░░██╗░
# ░╚═══██╗██╔══╝░░██╔══██║██╔══██╗██║░░██╗██╔══██║██║██║╚████║██║░░╚██╗
# ██████╔╝███████╗██║░░██║██║░░██║╚█████╔╝██║░░██║██║██║░╚███║╚██████╔╝
# ╚═════╝░╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░

# ░█████╗░██╗░░██╗░█████╗░██████╗░░█████╗░░█████╗░████████╗███████╗██████╗░░██████╗
# ██╔══██╗██║░░██║██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔════╝
# ██║░░╚═╝███████║███████║██████╔╝███████║██║░░╚═╝░░░██║░░░█████╗░░██████╔╝╚█████╗░
# ██║░░██╗██╔══██║██╔══██║██╔══██╗██╔══██║██║░░██╗░░░██║░░░██╔══╝░░██╔══██╗░╚═══██╗
# ╚█████╔╝██║░░██║██║░░██║██║░░██║██║░░██║╚█████╔╝░░░██║░░░███████╗██║░░██║██████╔╝
# ░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░░░░╚═╝░░░╚══════╝╚═╝░░╚═╝╚═════╝░
a ='123' in s # returns True if the string is present
s.find('1') # finds the index of the first occurrence of the element passed as argument
s.index('1') # finds the index of the first occurrence of the element
'the happiest person in the whole wide world.'.index('the',10,44) #=> 23

#----------------------------------------------------------------
#----------------------------------------------------------------

# ░█████╗░██╗░░██╗███████╗░█████╗░██╗░░██╗██╗███╗░░██╗░██████╗░  ░██████╗████████╗██████╗░██╗███╗░░██╗░██████╗░
# ██╔══██╗██║░░██║██╔════╝██╔══██╗██║░██╔╝██║████╗░██║██╔════╝░  ██╔════╝╚══██╔══╝██╔══██╗██║████╗░██║██╔════╝░
# ██║░░╚═╝███████║█████╗░░██║░░╚═╝█████═╝░██║██╔██╗██║██║░░██╗░  ╚█████╗░░░░██║░░░██████╔╝██║██╔██╗██║██║░░██╗░
# ██║░░██╗██╔══██║██╔══╝░░██║░░██╗██╔═██╗░██║██║╚████║██║░░╚██╗  ░╚═══██╗░░░██║░░░██╔══██╗██║██║╚████║██║░░╚██╗
# ╚█████╔╝██║░░██║███████╗╚█████╔╝██║░╚██╗██║██║░╚███║╚██████╔╝  ██████╔╝░░░██║░░░██║░░██║██║██║░╚███║╚██████╔╝
# ░╚════╝░╚═╝░░╚═╝╚══════╝░╚════╝░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░  ╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░

s.isalnum() #checks whether string is alphanumeric
s.isalpha() #checks whether string is collection of alphabets
s.isdecimal() #checks whether string is a decimal number
s.isdigit() #checks whether string is a digit
s.isnumeric() #checks whether string is a number
s.isspace() #TRUE if all characters are whitespaces
s.isdecimal() #checks whether string is a decimal
s.islower() #checks the string is lowercase
s.isupper() #checks whether string is uppercase
'Toronto'.isupper() #=> False
'TORONTO'.isupper() #= True
s.isascii() 
print( 'Â'.isascii() ) #=> False
print( 'A'.isascii() ) #=> True

# ------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------


# ██████╗░███████╗███╗░░░███╗░█████╗░██╗░░░██╗███████╗  ░██╗░░░░░░░██╗██╗░░██╗██╗████████╗███████╗
# ██╔══██╗██╔════╝████╗░████║██╔══██╗██║░░░██║██╔════╝  ░██║░░██╗░░██║██║░░██║██║╚══██╔══╝██╔════╝
# ██████╔╝█████╗░░██╔████╔██║██║░░██║╚██╗░██╔╝█████╗░░  ░╚██╗████╗██╔╝███████║██║░░░██║░░░█████╗░░
# ██╔══██╗██╔══╝░░██║╚██╔╝██║██║░░██║░╚████╔╝░██╔══╝░░  ░░████╔═████║░██╔══██║██║░░░██║░░░██╔══╝░░
# ██║░░██║███████╗██║░╚═╝░██║╚█████╔╝░░╚██╔╝░░███████╗  ░░╚██╔╝░╚██╔╝░██║░░██║██║░░░██║░░░███████╗
# ╚═╝░░╚═╝╚══════╝╚═╝░░░░░╚═╝░╚════╝░░░░╚═╝░░░╚══════╝  ░░░╚═╝░░░╚═╝░░╚═╝░░╚═╝╚═╝░░░╚═╝░░░╚══════╝

# ░██████╗██████╗░░█████╗░░█████╗░███████╗░██████╗
# ██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔════╝
# ╚█████╗░██████╔╝███████║██║░░╚═╝█████╗░░╚█████╗░
# ░╚═══██╗██╔═══╝░██╔══██║██║░░██╗██╔══╝░░░╚═══██╗
# ██████╔╝██║░░░░░██║░░██║╚█████╔╝███████╗██████╔╝
# ╚═════╝░╚═╝░░░░░╚═╝░░╚═╝░╚════╝░╚══════╝╚═════╝░
s.strip() #removes leading and trailing whitespaces
s.lstrip() #left strip
s.rstrip() #right strip
string = '  string of whitespace    '
string.lstrip() #=> 'string of whitespace    '
string.rstrip() #=> '  string of whitespace'
string.strip() #=> 'string of whitespace'

# ------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------



# ██╗████████╗███████╗██████╗░░█████╗░██████╗░██╗░░░░░███████╗  ████████╗░█████╗░
# ██║╚══██╔══╝██╔════╝██╔══██╗██╔══██╗██╔══██╗██║░░░░░██╔════╝  ╚══██╔══╝██╔══██╗
# ██║░░░██║░░░█████╗░░██████╔╝███████║██████╦╝██║░░░░░█████╗░░  ░░░██║░░░██║░░██║
# ██║░░░██║░░░██╔══╝░░██╔══██╗██╔══██║██╔══██╗██║░░░░░██╔══╝░░  ░░░██║░░░██║░░██║
# ██║░░░██║░░░███████╗██║░░██║██║░░██║██████╦╝███████╗███████╗  ░░░██║░░░╚█████╔╝
# ╚═╝░░░╚═╝░░░╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░╚══════╝╚══════╝  ░░░╚═╝░░░░╚════╝░

# ░██████╗████████╗██████╗░██╗███╗░░██╗░██████╗░
# ██╔════╝╚══██╔══╝██╔══██╗██║████╗░██║██╔════╝░
# ╚█████╗░░░░██║░░░██████╔╝██║██╔██╗██║██║░░██╗░
# ░╚═══██╗░░░██║░░░██╔══██╗██║██║╚████║██║░░╚██╗
# ██████╔╝░░░██║░░░██║░░██║██║██║░╚███║╚██████╔╝
# ╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░

s.join() # ''.join(reversed("hello world")) --> reverses the string 'dlrow olleh'
'-'.join(['a','b','c'])
#=> 'a-b-c'

# Remove vowels from string
string = 'Hello 1 World 2'
vowels = ('a','e','i','o','u')
''.join([c for c in string if c not in vowels])
#=> 'Hll 1 Wrld 2'
 

# ------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------


# ░██████╗██████╗░██╗░░░░░██╗████████╗████████╗██╗███╗░░██╗░██████╗░
# ██╔════╝██╔══██╗██║░░░░░██║╚══██╔══╝╚══██╔══╝██║████╗░██║██╔════╝░
# ╚█████╗░██████╔╝██║░░░░░██║░░░██║░░░░░░██║░░░██║██╔██╗██║██║░░██╗░
# ░╚═══██╗██╔═══╝░██║░░░░░██║░░░██║░░░░░░██║░░░██║██║╚████║██║░░╚██╗
# ██████╔╝██║░░░░░███████╗██║░░░██║░░░░░░██║░░░██║██║░╚███║╚██████╔╝
# ╚═════╝░╚═╝░░░░░╚══════╝╚═╝░░░╚═╝░░░░░░╚═╝░░░╚═╝╚═╝░░╚══╝░╚═════╝░

# ░██████╗████████╗██████╗░██╗███╗░░██╗░██████╗░
# ██╔════╝╚══██╔══╝██╔══██╗██║████╗░██║██╔════╝░
# ╚█████╗░░░░██║░░░██████╔╝██║██╔██╗██║██║░░██╗░
# ░╚═══██╗░░░██║░░░██╔══██╗██║██║╚████║██║░░╚██╗
# ██████╔╝░░░██║░░░██║░░██║██║██║░╚███║╚██████╔╝
# ╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░
s.split() # splits the string and returns a list of strings

sentence = "It was a stormy night\nThe house creeked\nThe wind blew."
sentence.splitlines()
#=> ['It was a stormy night', 'The house creeked', 'The wind blew.']

sentence = "If you want to be a ninja"
print(sentence.partition(' want '))
#=> ('If you', ' want ', 'to be a ninja')

# ------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------

# ███╗░░░███╗░█████╗░██╗░░██╗  ░█████╗░███╗░░██╗██████╗░  ███╗░░░███╗██╗███╗░░██╗
# ████╗░████║██╔══██╗╚██╗██╔╝  ██╔══██╗████╗░██║██╔══██╗  ████╗░████║██║████╗░██║
# ██╔████╔██║███████║░╚███╔╝░  ███████║██╔██╗██║██║░░██║  ██╔████╔██║██║██╔██╗██║
# ██║╚██╔╝██║██╔══██║░██╔██╗░  ██╔══██║██║╚████║██║░░██║  ██║╚██╔╝██║██║██║╚████║
# ██║░╚═╝░██║██║░░██║██╔╝╚██╗  ██║░░██║██║░╚███║██████╔╝  ██║░╚═╝░██║██║██║░╚███║
# ╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝  ╚═╝░░╚═╝╚═╝░░╚══╝╚═════╝░  ╚═╝░░░░░╚═╝╚═╝╚═╝░░╚══╝
# Capitalized characters and characters earlier in the alphabet have lower indexes. min() will return the character with the lowest index.
# Sorts based on the ascii values of the characters
min('strings') #=> 'g' 
max('strings') #=> 't'

# ------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------

# Raw string to ignore escape sequences
print(r'Hello \nWorld') # prints Hello \nWorld

# To check the two strings or characters are having same ID we can use 'is' operator

# ------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------

